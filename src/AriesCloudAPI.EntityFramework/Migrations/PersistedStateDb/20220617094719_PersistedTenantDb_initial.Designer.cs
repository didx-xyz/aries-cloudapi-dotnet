// <auto-generated />
using System;
using AriesCloudAPI.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AriesCloudAPI.EntityFramework.Migrations.PersistedStateDb
{
    [DbContext(typeof(PersistedStateDbContext))]
    [Migration("20220617094719_PersistedTenantDb_initial")]
    partial class PersistedTenantDb_initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AriesCloudAPI.EntityFramework.Entities.Connection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aries_ConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FkTenant1Id")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Tenant2Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FkTenant1Id");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("AriesCloudAPI.EntityFramework.Entities.PersistedState", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("PersistedTenants");
                });

            modelBuilder.Entity("AriesCloudAPI.EntityFramework.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AriesCloudAPI.EntityFramework.Entities.Schema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aries_SchemaID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Schemas");
                });

            modelBuilder.Entity("AriesCloudAPI.EntityFramework.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Aries_TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("AriesCloudAPI.EntityFramework.Entities.TenantSchema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aries_CredentialDefinitionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FkSchemaId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FkTenantId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FkSchemaId");

                    b.HasIndex("FkTenantId");

                    b.ToTable("TenantSchemas");
                });

            modelBuilder.Entity("AriesCloudAPI.EntityFramework.Entities.Connection", b =>
                {
                    b.HasOne("AriesCloudAPI.EntityFramework.Entities.Tenant", "Tenant1")
                        .WithMany()
                        .HasForeignKey("FkTenant1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant1");
                });

            modelBuilder.Entity("AriesCloudAPI.EntityFramework.Entities.TenantSchema", b =>
                {
                    b.HasOne("AriesCloudAPI.EntityFramework.Entities.Schema", "Schema")
                        .WithMany()
                        .HasForeignKey("FkSchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AriesCloudAPI.EntityFramework.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("FkTenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");

                    b.Navigation("Tenant");
                });
#pragma warning restore 612, 618
        }
    }
}
